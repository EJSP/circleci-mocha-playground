version: 2.1

parameters:
  TEST_ENV:
    type: string
    default: fake_env

orbs:
  node: circleci/node@5.0.0

commands:
  setup_1:
    description: "checkout, install mocha test dependencies"
    steps:
      - checkout
      - node/install-packages
  
  test_configs_test:
    description: "test writing fake firebase service account creds from Circle env vars"
    steps:
      - run: ls -l | awk '{print $5, $9}'
      - run: echo $FAKE_ENV_JSON > ./fake_env.json
      - run: ls -l | awk '{print $5, $9}'

  run_tests:
    description: "see if creds file exists, run tests"
    steps:
        - run: ls -l | awk '{print $5, $9}'
        - run: npm run mocha

  # setup_env_vars:
  #   # define env vars at runtime
  #   steps:
  #     - run: echo export TEST_ENV=\"<< pipeline.parameters.TEST_ENV >>\" >> "$BASH_ENV"
  #     - run: echo export PAYLOAD_CONTEXT=\"Job $CIRCLE_JOB on branch $CIRCLE_BRANCH | $CIRCLE_BUILD_URL\" >> "$BASH_ENV"
  #     - run:
  #         name: test on_success message
  #         when: on_success
  #         command: |
  #           echo export PAYLOAD_RESULT=\":white_check_mark: Passed\" >> "$BASH_ENV"
  #     - run:
  #         name: test on_fail message
  #         when: on_fail
  #         command: |
  #           echo export PAYLOAD_RESULT=\":eyes: FAILED \" >> "$BASH_ENV"
  # setup_env_vars:
  #   # define env vars at runtime
  #   steps:
  #     - run: echo export TEST_ENV=\"<< pipeline.parameters.TEST_ENV >>\" >> "$BASH_ENV"
  #     - run: echo export PAYLOAD_CONTEXT=\"$CIRCLE_JOB on $CIRCLE_BRANCH \n $CIRCLE_BUILD_URL \" >> "$BASH_ENV"
  #     - run:
  #         name: test on_success message
  #         when: on_success
  #         command: |
  #           echo export PAYLOAD_RESULT=\":white_check_mark: Passed \" >> "$BASH_ENV"
  #     - run:
  #         name: test on_fail message
  #         when: on_fail
  #         command: |
  #           echo export PAYLOAD_RESULT=\":eyes: FAILED \" >> "$BASH_ENV"


  # slack_setup:
  #   steps:
  #     - run: |
  #         echo "$TEST_ENV"
  #         echo "$PAYLOAD_RESULT"
  #         echo "$PAYLOAD_CONTEXT"
  #     - run:
  #         name: write slack payload to file
  #         command: |
  #           echo '{"TEST_ENV": "'"$TEST_ENV"'", "RESULT": "'"$PAYLOAD_RESULT"'", "CONTEXT": "'"$PAYLOAD_CONTEXT"'"}' > payload.json

  # slack_post:
  #   steps:
  #     - run:
  #         name: cat payload.json
  #         command: cat payload.json
  #     - run: 
  #         name: post payload.json to slack webhook url
  #         command: |
  #           curl -X POST -H 'Content-type: application/json' --data @payload.json $TEST_WEBHOOK_NOTIF_URL

  spam_slack:
    steps:
      - run:
          name: temp - Set up Slack payload with test job context
          when: always
          command: |
            RESULT="Passed"
            echo $RESULT
            echo '{"TEST_ENV": "'"$TEST_ENV"'", "RESULT": "'"$RESULT"'", "CONTEXT": "'"$CONTEXT"'"}' > payload.json
      # - run:
        # CONTEXT="$RESULT" on "$TEST_ENV": "$CIRCLE_JOB" on "$CIRCLE_BRANCH" "$CIRCLE_BUILD_URL"
      #     name: temp - Set up Slack payload with test job context
      #     when: on_fail
      #     command: |
      #       RESULT="Failed"
      #       CONTEXT=\"$RESULT on $TEST_ENV: $CIRCLE_JOB on $CIRCLE_BRANCH $CIRCLE_BUILD_URL\" >> "$BASH_ENV"
      #       source $BASH_ENV
      #       echo $RESULT
      #       echo $CONTEXT
      #       echo export CONTEXT=\"$RESULT on $TEST_ENV: $CIRCLE_JOB on $CIRCLE_BRANCH $CIRCLE_BUILD_URL\" >> "$BASH_ENV"
      - run:
          name: Post to Slack
          when: always
          command: |
            curl -X POST -H 'Content-type: application/json' --data @payload.json $TEST_WEBHOOK_NOTIF_URL

      # - run:
      #     when: on_success
      #     command: |
      #       echo export RESULT=\":heavy_check_mark: Passed\" >> "$BASH_ENV"
      # - run:
      #     when: on_fail
      #     command: |
      #       echo export RESULT=\":eyes: Failed\" >> "$BASH_ENV"
      # - run:
      #     when: always
      #     command: |
      #       source "$BASH_ENV"
      #       echo export CONTEXT=\"$RESULT on $TEST_ENV: $CIRCLE_JOB on $CIRCLE_BRANCH $CIRCLE_BUILD_URL\" >> "$BASH_ENV"
      # - run:
      #     name: Write Slack payload to file
      #     when: always
      #     command: |
      #       source "$BASH_ENV"
      #       echo '{"TEST_ENV": "'"$TEST_ENV"'", "RESULT": "'"$RESULT"'", "CONTEXT": "'"$CONTEXT"'"}' > payload.json
      # - run:
      #     name: Post to Slack
      #     when: always
      #     command: |
      #       curl -X POST -H 'Content-type: application/json' --data @payload.json $TEST_WEBHOOK_NOTIF_URL


jobs:
  circle_config_test: 
    executor:
      name: node/default
      tag: '16.16.0'
    steps:
      - run: echo export TEST_ENV=\"<< pipeline.parameters.TEST_ENV >>\" >> "$BASH_ENV"
      - spam_slack
      # - setup_env_vars
      # - slack_setup
      # - slack_post

workflows:
  build_test:
    jobs:
      - circle_config_test
