version: 2.1

parameters:
  TEST_ENV:
    type: string
    default: fake_test_env
  PAYLOAD:
    type: string
    default: '{ "TEST_ENV": << pipeline.parameters.TEST_ENV >>, "CIRCLE_BUILD_URL": "$CIRCLE_BUILD_URL", "CIRCLE_JOB": "$CIRCLE_JOB", "CIRCLE_BRANCH": "$CIRCLE_BRANCH", "TEXT": "example text" }'

orbs:
  node: circleci/node@5.0.0

commands:
  setup_1:
    description: "checkout, install dependencies"
    steps:
      - checkout
      - node/install-packages
  
  # setup_env:
  #   # define env vars at runtime
  # steps:
  #     - run: echo "<< pipeline.parameters.TEST_ENV >>"
  #     - run: echo "<< pipeline.parameters.PAYLOAD >>"
  #     - run: echo CIRCLE_JOB "${CIRCLE_JOB}" CIRCLE_BRANCH "${CIRCLE_BRANCH}" CIRCLE_BUILD_URL "${CIRCLE_BUILD_URL}"
  #     - run: |
  #         echo 'export CIRCLE_BUILD_URL="$CIRCLE_BUILD_URL"'  >> "$BASH_ENV"
  #         echo 'export CIRCLE_JOB="$CIRCLE_JOB"' >> "$BASH_ENV"
  #         echo 'export CIRCLE_BRANCH="$CIRCLE_BRANCH"' >> "$BASH_ENV"
  #         echo 'export TEST_ENV="<< pipeline.parameters.TEST_ENV >>"' >> "$BASH_ENV"

  config_test:
    description: "test writing fake firebase service account creds from Circle env vars"
    steps:
      - run: ls -l | awk '{print $5, $9}'
      - run: echo $FAKE_ENV_JSON > ./fake_env.json
      - run: ls -l | awk '{print $5, $9}'

  run_tests:
    description: "see if creds file exists, run tests"
    steps:
        - run: ls -l | awk '{print $5, $9}'
        - run: npm run mocha

  slack_1:
    description: "Test out the slack spambot, part 1"
    steps:
      - run: |
          curl -X POST "$TEST_WEBHOOK_NOTIF_URL" \
          -H 'Content-type: application/json' \
          -d '{ "TEXT": "example text TEST_ENV=<< pipeline.parameters.TEST_ENV >>" }'

  # slack_2:
  #   description: "Test out the slack spambot, part 2"
  #   steps:
  #     - run: echo "TEST_ENV"
  #     # - run: |
  #     #     curl -X POST "$TEST_WEBHOOK_NOTIF_URL" \
  #     #     -H 'Content-type: application/json' \
  #     #     -d << pipeline.parameters.PAYLOAD >>
  #     - run:
  # #         #name: Notify ir_pipeline_team_test_notifs Slack channel
  #         name: "test-test-notifs-the-sequel"
  #         when: always #on_success
  #         command: |
  #             curl -X POST "$TEST_WEBHOOK_NOTIF_URL" \
  #             -H 'Content-type: application/json' \
  #             -d '{
  #               "TEST_ENV": "<< pipeline.parameters.TEST_ENV >>",
  #               "CIRCLE_BUILD_URL": "$CIRCLE_BUILD_URL",
  #               "CIRCLE_JOB": "$CIRCLE_JOB",
  #               "CIRCLE_BRANCH": $CIRCLE_BRANCH,
  #               "TEXT": "example text 2"
  #             }'
  slack_2:
    description: "Test out the slack spambot, part 2 the 2nd"
    steps:
      - run: echo "$TEXT"
      - run: |
          curl -X POST "$TEST_WEBHOOK_NOTIF_URL" \
          -H 'Content-type: application/json' \
          -d { "TEXT": "$TEXT" }


jobs:
  circle_config_test:
    environment:
      TEXT: TEST_ENV "<< pipeline.parameters.TEST_ENV >>" CIRCLE_JOB "${CIRCLE_JOB}" CIRCLE_BRANCH "${CIRCLE_BRANCH}" CIRCLE_BUILD_URL "${CIRCLE_BUILD_URL}"
    executor:
      name: node/default
      tag: '16.16.0'
    steps:
      # - setup_1
      # - config_test
      # - run_tests
      # - run: echo $TEXT
      # - slack_1
      # - setup_env
      - slack_1
      - slack_2

workflows:
  build_test:
    jobs:
      - circle_config_test
